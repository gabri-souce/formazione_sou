- name: Setup Jenkins Agent via REST API and Docker (URI + Groovy)
  hosts: jenkins
  become: yes
  vars_files:
    - group_vars/jenkins/vault.yml

  vars:
    jenkins_url: "http://172.20.0.10:8080"
    #jenkins_user: "gab"               # admin Jenkins username
    #jenkins_pass: "123456"            # admin Jenkins password
    agent_name: "my_agent2"
    agent_remote_fs: "/home/jenkins/agent2"
    agent_container_name: "jenkins_agent2"
    token_name: "ansible_auto_token"
    agent_image: "jenkins/inbound-agent:latest"

  tasks:

    - name: Create agent workdir on host
      ansible.builtin.file:
        path: "{{ agent_remote_fs }}"
        state: directory
        mode: '0777'

    - name: Get Jenkins crumb and session cookie
      ansible.builtin.uri:
        url: "{{ jenkins_url }}/crumbIssuer/api/json"
        method: GET
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_pass }}"
        force_basic_auth: yes
        return_content: yes
      register: crumb_result

    - name: Set crumb fact
      set_fact:
        jenkins_crumb: "{{ crumb_result.json.crumb }}"
        jenkins_cookie: "{{ crumb_result.cookies_string }}"

    - name: Generate Jenkins API token
      ansible.builtin.uri:
        url: "{{ jenkins_url }}/me/descriptorByName/jenkins.security.ApiTokenProperty/generateNewToken"
        method: POST
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_pass }}"
        force_basic_auth: yes
        headers:
          Jenkins-Crumb: "{{ jenkins_crumb }}"
          Cookie: "{{ jenkins_cookie }}"
        body_format: form-urlencoded
        body:
          newTokenName: "{{ token_name }}"
        return_content: yes
      register: api_token_result

    - name: Extract API token
      set_fact:
        jenkins_api_token: "{{ api_token_result.json.data.tokenValue }}"

    - name: Define Groovy script for agent creation
      set_fact:
        agent_script: |
          import jenkins.model.*
          import hudson.model.*
          import hudson.slaves.*

          def slaveName = "{{ agent_name }}"
          def remoteFS = "{{ agent_remote_fs }}"
          def numExecutors = 1
          def nodeDescription = "Created via Ansible"
          def labels = ""
          def mode = Node.Mode.EXCLUSIVE

          def jenkins = Jenkins.instance
          if (jenkins.getNode(slaveName) == null) {
              def slave = new DumbSlave(slaveName, nodeDescription, remoteFS, numExecutors.toString(), mode, labels, new JNLPLauncher(), new RetentionStrategy.Always(), [])
              jenkins.addNode(slave)
              println("Agent created: ${slaveName}")
          } else {
              println("Agent ${slaveName} already exists")
          }

    - name: Create Jenkins agent node via script API
      ansible.builtin.uri:
        url: "{{ jenkins_url }}/scriptText"
        method: POST
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_api_token }}"
        force_basic_auth: yes
        headers:
          Jenkins-Crumb: "{{ jenkins_crumb }}"
        body_format: form-urlencoded
        body:
          script: "{{ agent_script }}"
        return_content: yes
        status_code: 200

    - name: Get Jenkins agent JNLP secret
      ansible.builtin.uri:
        url: "{{ jenkins_url }}/computer/{{ agent_name }}/jenkins-agent.jnlp"
        method: GET
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_api_token }}"
        force_basic_auth: yes
        return_content: yes
        status_code: 200
      register: agent_jnlp

    - name: Extract agent secret as string
      set_fact:
        jenkins_agent_secret: "{{ (agent_jnlp.content | regex_findall('<argument>(.*?)</argument>') | first) | string }}"

    - name: Remove existing Jenkins agent container (if exists)
      community.docker.docker_container:
        name: "{{ agent_container_name }}"
        state: absent
        force_kill: yes

    - name: Start Jenkins agent container
      ansible.builtin.shell: |
        docker run -d \
          --name {{ agent_container_name }} \
          --network host \
          -e JENKINS_URL={{ jenkins_url }} \
          -e JENKINS_AGENT_NAME={{ agent_name }} \
          -e JENKINS_SECRET="{{ jenkins_agent_secret }}" \
          -e JENKINS_AGENT_WORKDIR={{ agent_remote_fs }} \
          {{ agent_image }}
      args:
        executable: /bin/bash










