{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\froman\fcharset0 Times-Bold;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Perfetto, questo output dice chiaramente che il playbook 
\f1\b ha funzionato completamente
\f0\b0 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Il token API \'e8 stato generato:\uc0\u8232 
\f2\fs26 \uc0\u8232 \u8232 \u8232 11d951fcb7aa181325b082dbc9d9bec1b3\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Il nodo agent 
\f2\fs26 my_agent
\f0\fs24  \'e8 stato creato correttamente.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Il secret JNLP \'e8 stato recuperato:\uc0\u8232 
\f2\fs26 \uc0\u8232 \u8232 \u8232 6be4ec132715213e93aab40f16e70d4f85e849aa361f96b61c00a28151c0d528\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ansible ti ha fornito il comando completo per far partire l\'92agent:\uc0\u8232 
\f2\fs26 \uc0\u8232 \u8232 \u8232 java -jar agent.jar -jnlpUrl http://127.0.0.1:8080/computer/my_agent/jenkins-agent.jnlp -secret 6be4ec132715213e93aab40f16e70d4f85e849aa361f96b61c00a28151c0d528 -workDir "/home/jenkins/agent"\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 Quindi ora 
\f1\b puoi partire direttamente dal container agent
\f0\b0 :\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \
docker exec -it -u root jenkins_master bash\
cd /home/jenkins/agent\
curl -O http://127.0.0.1:8080/jnlpJars/agent.jar\
java -jar agent.jar -jnlpUrl http://127.0.0.1:8080/computer/my_agent/jenkins-agent.jnlp -secret 6be4ec132715213e93aab40f16e70d4f85e849aa361f96b61c00a28151c0d528 -workDir "/home/jenkins/agent"\
}