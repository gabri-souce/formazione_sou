# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # Immagine base per entrambi i nodi
  config.vm.box = "ubuntu/jammy64"
  
  # Configurazione del primo nodo
  config.vm.define "nodo1" do |nodo1|
    nodo1.vm.hostname = "nodo1"
    nodo1.vm.network "private_network", ip: "192.168.56.10"
    nodo1.vm.network "forwarded_port", guest: 80, host: 8080
    nodo1.vm.network "forwarded_port", guest: 443, host: 8443
    
    # Configurazione provider VirtualBox
    nodo1.vm.provider "virtualbox" do |vb|
      vb.name = "docker-nodo1"
      vb.memory = "2048"
      vb.cpus = 2
    end
    
    # Provisioning per installare Docker
    nodo1.vm.provision "shell", inline: <<-SHELL
      # Aggiornamento sistema
      apt-get update
      apt-get upgrade -y
      
      # Installazione dipendenze
      apt-get install -y \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg \
        lsb-release
      
      # Aggiunta chiave GPG Docker
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      
      # Aggiunta repository Docker
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      
      # Installazione Docker
      apt-get update
      apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
      
      # Aggiunta utente vagrant al gruppo docker
      usermod -aG docker vagrant
      
      # Avvio servizio Docker
      systemctl enable docker
      systemctl start docker
      
      # Installazione Docker Compose
      curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      chmod +x /usr/local/bin/docker-compose
      
      echo "Docker installato su nodo1"
    SHELL
  end
  
  # Configurazione del secondo nodo
  config.vm.define "nodo2" do |nodo2|
    nodo2.vm.hostname = "nodo2"
    nodo2.vm.network "private_network", ip: "192.168.56.11"
    nodo2.vm.network "forwarded_port", guest: 80, host: 8081
    nodo2.vm.network "forwarded_port", guest: 443, host: 8444
    
    # Configurazione provider VirtualBox
    nodo2.vm.provider "virtualbox" do |vb|
      vb.name = "docker-nodo2"
      vb.memory = "2048"
      vb.cpus = 2
    end
    
    # Provisioning per installare Docker
    nodo2.vm.provision "shell", inline: <<-SHELL
      # Aggiornamento sistema
      apt-get update
      apt-get upgrade -y
      
      # Installazione dipendenze
      apt-get install -y \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg \
        lsb-release
      
      # Aggiunta chiave GPG Docker
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      
      # Aggiunta repository Docker
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      
      # Installazione Docker
      apt-get update
      apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
      
      # Aggiunta utente vagrant al gruppo docker
      usermod -aG docker vagrant
      
      # Avvio servizio Docker
      systemctl enable docker
      systemctl start docker
      
      # Installazione Docker Compose
      curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      chmod +x /usr/local/bin/docker-compose
      
      echo "Docker installato su nodo2"
    SHELL
  end
  
  # Configurazione globale per sincronizzazione cartelle
  config.vm.synced_folder ".", "/vagrant", type: "virtualbox"
  
  # Configurazione SSH
  config.ssh.insert_key = false
  config.ssh.private_key_path = ['~/.vagrant.d/insecure_private_key', '~/.ssh/id_rsa']
  config.ssh.forward_agent = true
  
  # Configurazione generale VirtualBox
  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
  end
end
 